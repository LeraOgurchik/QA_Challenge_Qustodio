{
	"info": {
		"_postman_id": "11e744b4-4631-4026-a31d-e8fe51c9b25f",
		"name": "QA Interview Challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16576678"
	},
	"item": [
		{
			"name": "Positive Tests",
			"item": [
				{
					"name": "200: add new pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response contains correct pet's name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql('Morty');\r",
									"});\r",
									"\r",
									"pm.test(\"Pet's category is cat\", function () {\r",
									"    var jsonData = pm.response.json(); \r",
									"    pm.expect(jsonData.category.name).to.eql(\"cat\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct tag\", function () {\r",
									"    var jsonData = pm.response.json(); \r",
									"    const tagName = jsonData.tags[0].name;\r",
									"    pm.expect(tagName).to.eql(\"fluffy\"); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 123,\n  \"category\": {\n    \"id\": 123,\n    \"name\": \"cat\"\n  },\n  \"name\": \"Morty\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 123,\n      \"name\": \"fluffy\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/pet",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "200: Find created pet by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct pet's name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql('Morty');\r",
									"});\r",
									"\r",
									"pm.test(\"Pet's category is cat\", function () {\r",
									"    var jsonData = pm.response.json(); \r",
									"    pm.expect(jsonData.category.name).to.eql(\"cat\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct tag\", function () {\r",
									"    var jsonData = pm.response.json(); \r",
									"    const tagName = jsonData.tags[0].name;\r",
									"    pm.expect(tagName).to.eql(\"fluffy\"); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/pet/{{petID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "200: Update pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct pet's name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql('Morty');\r",
									"});\r",
									"\r",
									"pm.test(\"Pet's category is cat\", function () {\r",
									"    var jsonData = pm.response.json(); \r",
									"    pm.expect(jsonData.category.name).to.eql(\"cat\");\r",
									"});\r",
									"\r",
									"pm.test(\"Tag is changed to 'hungry'\", function () {\r",
									"    var jsonData = pm.response.json(); \r",
									"    const tagName = jsonData.tags[0].name;\r",
									"    pm.expect(tagName).to.eql(\"hungry\"); \r",
									"});\r",
									"\r",
									"pm.test(\"ID is not changed\", function () {\r",
									"    var jsonData = pm.response.json(); \r",
									"    pm.expect(jsonData.category.id).to.eql(123);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 123,\r\n  \"category\": {\r\n    \"id\": 123,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Morty\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 123,\r\n      \"name\": \"hungry\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/pet",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "200: Find  updated pet by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Tag is changed to 'hungry'\", function () {\r",
									"    var jsonData = pm.response.json(); \r",
									"    const tagName = jsonData.tags[0].name;\r",
									"    pm.expect(tagName).to.eql(\"hungry\"); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/pet/{{petID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative Tests",
			"item": [
				{
					"name": "405 add new pet - empty body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"pm.test(\"Response contains correct message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql('unknown');\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/pet",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "415 add new pet - Invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 415\", function () {\r",
									"    pm.response.to.have.status(415);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"abc\",\r\n  \"category\": {\r\n    \"id\": 123,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Morty\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 123,\r\n      \"name\": \"fluffy\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{baseURL}}/pet",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "415 add new pet-  Invalid photoUrls",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 415\", function () {\r",
									"    pm.response.to.have.status(415);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 123,\r\n  \"category\": {\r\n    \"id\": 123,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"photoUrls\":\r\n    \"string\"\r\n  ,\r\n  \"tags\": [\r\n    {\r\n      \"id\": 123,\r\n      \"name\": \"fluffy\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{baseURL}}/pet",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "415: Update pet - empty body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 415\", function () {\r",
									"    pm.response.to.have.status(415);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql('unknown');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/pet",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "415 Update pet - Invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 415\", function () {\r",
									"    pm.response.to.have.status(415);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"abc\",\r\n  \"category\": {\r\n    \"id\": 123,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Morty\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 123,\r\n      \"name\": \"fluffy\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{baseURL}}/pet",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		},
		{
			"key": "petID",
			"value": "123",
			"type": "string"
		}
	]
}